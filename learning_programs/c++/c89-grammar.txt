единица-трансляции:
	внешнее-объявление
	единица-трансляции внешнее-объявление
внешнее-объявление:
	определение-функции
	объявление
определение-функции:
	спецификаторы-объявленияopt описатель список-объявленийopt составной-оператор
объявление:
	спецификаторы-объявления список-иниц-описателейopt
список-объявлений:
	объявление
	список-объявлений объявление
спецификаторы-объявления:
	спецификатор-класса-памяти спецификаторы-объявленияopt
	спецификатор-типа спецификаторы-объявленияopt
	модификатор-типа спецификаторы-объявленияopt
спецификатор-класса-памяти:
	auto 
	register 
	static 
	extern 
	typedef
спецификатор-типа:
	void 
	char 
	short 
	int 
	long 
	float 
	double 
	signed
	unsigned 
	спецификатор-структуры-или-объединения
	спецификатор-перечисления 
	типоопределяющее-имя
модификатор-типа:
	const 
	volatile
спецификатор-структуры-или-объединения:
	struct-или-union идентификаторopt { список-объявлений-структуры }
	struct-или-union идентификатор
struct-или-union:
	struct 
	union
список-объявлений-структуры:
	объявление-структуры
	список-объявлений-структуры объявление-структуры
список-иниц-описателей:
	иниц-описатель
	список-иниц-описателей , иниц-описатель
иниц-описатель:
	описатель
	описатель = инициализатор
объявление-структуры:
	список-спецификаторов-модификаторов список-описателей-структуры ;
список-спецификаторов-модификаторов:
	спецификатор-типа список-спецификаторов-модификаторовopt
	модификатор-типа список-спецификаторов-модификаторовopt
список-описателей-структуры:
	описатель-структуры
	список-описателей-структуры , описатель-структуры
	
описатель-структуры:
	описатель
	описательopt : константное-выражение
спецификатор-перечисления:
	enum идентификаторopt { список-перечислимых }
	enum идентификатор
список-перечислимых:
	перечислимое
	список-перечислимых , перечислимое
перечислимое:
	идентификатор
	идентификатор = константное-выражение
описатель:
	указательopt собственно-описатель
собственно-описатель:
	идентификатор
	( описатель )
	собственно-описатель [ константное-выражениеopt ]
	собственно-описатель ( список-типов-параметров )
	собственно-описатель ( список-идентификаторовopt )
указатель:
	* список-модификаторов-типаopt
	* список-модификаторов-типаopt указатель
список-модификаторов-типа:
	модификатор-типа
	список-модификаторов-типа модификатор-типа
список-типов-параметров:
	список-параметров
	список-параметров , ...
список-параметров:
	объявление-параметра
	список-параметров , объявление-параметра
объявление-параметра:
	спецификаторы-объявления описатель
	спецификаторы-объявления абстрактный-описательopt
список-идентификаторов:
	идентификатор
	список-идентификаторов , идентификатор
инициализатор:
	выражение-присваивания
	{ список-инициализаторов }
	{ список-инициализаторов , }
список-инициализаторов:
	инициализатор
	список-инициализаторов , инициализатор
имя-типа:
	список-спецификаторов-модификаторов абстрактный-описательopt
абстрактный-описатель:
	указатель
	указательopt собственно-абстрактный-описатель
собственно-абстрактный-описатель:
	( абстрактный-описатель )
	собственно-абстрактный-описательopt [ константное-выражениеopt ]
	собственно-абстрактный-описательopt ( список-типов-параметровopt )
типоопределяющее-имя:
	идентификатор
оператор:
	оператор-с-меткой
	оператор-выражение
	составной-оператор
	оператор-выбора
	оператор-цикла
	оператор-перехода
оператор-с-меткой:
	идентификатор : оператор
	case константное-выражение : оператор
	default : оператор
оператор-выражение:
	выражениеopt;
составной-оператор:
	{ список-объявленийopt список-операторовopt }
список-операторов:
	оператор
	список-операторов оператор
оператор-выбора:
	if ( выражение ) оператор
	if ( выражение ) оператор else оператор
	switch ( выражение ) оператор
оператор-цикла:
	while ( выражение ) оператор
	do оператор while ( выражение );
	for ( выражениеopt ; выражениеopt ; выражениеopt ) оператор
оператор-перехода:
	goto идентификатор ;
	continue ;
	break ;
	return выражениеopt ;
выражение:
	выражение-присваивания
	выражение , выражение-присваивания
выражение-присваивания:
	условное-выражение
	одноместное-выражение знак-присваивания выражение-присваивания
знак-присваивания:
	=
	/=
	%=
	+=
	-=
	<<=
	>>=
	&=
	|=
условное-выражение:
	выражение-с-логическим-ИЛИ
	выражение-с-логическим-ИЛИ ? выражение : условное-выражение
константное-выражение:
	условное-выражение
выражение-с-логическим-ИЛИ:
	выражение-с-логическим-И
	выражение-с-логическим-ИЛИ || выражение-с-логическим-И
выражение-с-логическим-И:
	выражение-с-включающим-ИЛИ
	выражение-с-логическим-И && выражение-с-включающим-ИЛИ
выражение-с-включающим-ИЛИ:
	выражение-с-исключающим-ИЛИ
	выражение-с-включающим-ИЛИ | выражение-с-исключающим-ИЛИ
выражение-с-исключающим-ИЛИ:
	выражение-с-И
	выражение-с-исключающим-ИЛИ * выражение-с-И
выражение-с-И:
	выражение-равенства
	выражение-с-И & выражение-равенства
выражение-равенства:
	выражение-отношения
	выражение-равенства == выражение-отношения
	выражение-равенства != выражение-отношения
выражение-отношения:
	выражение-со-сдвигом
	выражение-отношения < выражение-со-сдвигом
	выражение-отношения > выражение-со-сдвигом
	выражение-отношения <= выражение-со-сдвигом
	выражение-отношения >= выражение-со-сдвигом
выражение-со-сдвигом:
	аддитивное-выражение
	выражение-со-сдвигом » аддитивное-выражение
	выражение-со-сдвигом « аддитивное-выражение
аддитивное-выражение:
	мультипликативное-выражение
	аддитивное-выражение + мультипликативное-выражение
	аддитивное-выражение - мультипликативное-выражение
мультипликативное-выражение:
	выражение-приведения-к-типу
	мультипликативное-выражение * выражение-приведения-к-типу
	мультипликативное-выражение / выражение-приведения-к-типу
	мультипликативное-выражение % выражение-приведения-к-типу
выражение-приведения-к-типу:
	одноместное-выражение
	( имя-типа ) выражение-приведения-к-типу
одноместное-выражение:
	постфиксное-выражение
	++ одноместное-выражение
	-- одноместное-выражение
	знак-одноместной-операции выражение-приведения-к-типу
	sizeof одноместное-выражение
	sizeof ( имя-типа )
знак-одноместной-операции:
	&
	*
	+
	~
	!
постфиксное-выражение:
	первичное-выражение
	постфиксное-выражение [ выражение ]
	постфиксное-выражение ( список-аргументов-выраженийopt )
	постфиксное-выражение . идентификатор
	постфиксное-выражение -> идентификатор
	постфиксное-выражение ++
	постфиксное-выражение --
первичное-выражение:
	идентификатор
	константа
	строка
	( выражение )
список-аргументов-выражений:
	выражение-присваивания
	список-аргументов-выражений ,
константа:
	целочисленная-константа
	символьная-константа
	вещественная-константа
	константа-перечислимого-типа
	выражение-присваивания
управляющая-строка:
	#define идентификатор последовательность-лексем
	#define идентификатор( идентификатор, ..., идентификатор ) последовательность-лексем
	#undef идентификатор
	#include <имя-файла>
	#include "имя-файла"
	#include последовательность-лексем
	#line константа "имя-файла"
	#line константа
	#error последовательность-лексемopt
	#pragma последовательность-лексемopt
	#
	условная-конструкция-препроцессора
условная-конструкция-препроцессора:
	строка-if текст блоки-elif блок-elseopt #endif
строка-if:
	#if константное-выражение
	#ifdef идентификатор
	#ifndef идентификатор
блоки-elif:
	строка-elif текст
	блоки-elifopt
строка-elif:
	#elif константное-выражение
блок-else:
	строка-else текст
строка-else:
	#else
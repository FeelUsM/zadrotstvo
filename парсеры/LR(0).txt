правила:
   S' -> S
1) S -> (L)
2) S -> x
3) L -> S
4) L -> L,S
состояния и ситуации:
. - позиция указателя по строке: слева - то, что в стеке, права - то, что еще не прочитано
-0-
[S'->.S]	S -> 3
[S->.(L)]	( -> 2 
[S->.x]		x -> 1
-1-
[S->x.]		r2
-2-
[S->(.L)]	L -> 4
[L->.S]		S -> 5
[L->.L,S]	L -> 4
[S->.(L)]	( -> 2
[S->.x]		x -> 1
-3-
[S'->S.]	ACK
-4-
[S->(L.)]	) -> 6
[L->L.,S]	, -> 7
-5-
[L->S.]		r3
-6-
[S->(L).]	r1
-7-
[L->L,.S]	S -> 8
[S->.(L)]	( -> 2 
[S->.x]		x -> 1
-8-
[L->L,S.]	r4
таблицы:
act	|	(	)	x	,	$	|goto	S	L
--------+-----------------------------------------------+----------------------
0	|	s2		s1			|	3
2	|	s2		s1			|	5	4
3	|					ACK	|
4	|		S6		S7		|	
7	|	S2		S1			|	8

1 - r2
5 - r3
6 - r1
8 - r4

алгоритм:
shift s' === act[s,a]
	push(a)
	push(s)
	ip++
reduce A->mmm === act[s,a]
	for(i=0; i<length(mmm); i++){
		pop();	pop();
	}
	s' = top()
	A.data = действие от вынутого из стека
	push(A)
	push(goto[s',A])
	

пример работы:
(x,x,(x,x,x))$
..............
021		read (x
 (x		S = r2(x) 		OK
025
 (S		L = r3(r2(x)) 		OK
02471		read ,x
 (L,x		S = r2(x) 		OK
02478
 (L,S		L = r4(r3(r2(x)),r2(x)) OK
024721		read ,(x
 (L,(x		S = r2(x)		OK
024725
 (L,(S		L = r3(r2(x))		OK
02472471 	read ,x
 (L,(L,x 	S = r2(x)		OK
02472478
 (L,(L,S 	L = r4(r3(r2(x)),r2(x)) OK
02472471 	read ,x
 (L,(L,x 	S = r2(x)		OK
02472478
 (L,(L,S 	L = r4(r4(r3(r2(x)),r2(x)),r2(x)) OK
0247246 	read )
 (L,(L) 	S = r1((r4(r4(r3(r2(x)),r2(x)),r2(x)))) OK
02478
 (L,S		L = r4(r4(r3(r2(x)),r2(x)),r1((r4(r4(r3(r2(x)),r2(x)),r2(x))))) OK
0246		read )
 (L)		S = r1((r4(r4(r3(r2(x)),r2(x)),r1((r4(r4(r3(r2(x)),r2(x)),r2(x)))))))
03		read $
 S		ACK
